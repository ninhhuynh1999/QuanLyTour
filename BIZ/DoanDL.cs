//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyDuLich.DAL
{
    using System;
    using System.Collections.Generic;
    
    public partial class DoanDL
    {
        internal bool updated = false;
        internal List<CTDoan> listCTDoan;
        internal List<ChiPhi> listChiPhi;
        internal decimal doanhthu;

        public int Save()
        {
            if (Id == -1)
                DalDoanDL.Insert(this);

            if (updated)
                DalDoanDL.Update(this);

            return this.Id;
        }
        public List<CTDoan> GetCTDoanByDoan()
        {
            this.listCTDoan = DalDoanDL.GetCTDoanByDoan(this);
            return listCTDoan;
        }
        public List<Nguoi> GetNhanVienDoan()
        {
            List<Nguoi> list_tmp = new List<Nguoi>();
            foreach(CTDoan cT in listCTDoan)
            {
                if(cT.ChucVuTrongDoan.ToString().Trim() != "Khách")
                {
                    list_tmp.Add(DalNguoi.GetNguoiById(cT.MaNguoiThamGia));
                }
            }
            return list_tmp;
        }
        public List<Nguoi> GetKhachDoan()
        {
            List<Nguoi> list_tmp = new List<Nguoi>();
            foreach (CTDoan cT in listCTDoan)
            {

                if (cT.ChucVuTrongDoan.ToString().Trim() == "Khách")
                {
                    
                    list_tmp.Add(DalNguoi.GetNguoiById(cT.MaNguoiThamGia));
                }
            }
            return list_tmp;
        }
        public List<ChiPhi> GetChiPhiDoan()
        {
            this.listChiPhi = DalChiPhi.GetChiPhiDoan(this);
            return listChiPhi;
        }
        public decimal GetTongChiPhi()
        {
            decimal chiphi = 0;
            foreach (ChiPhi cp in listChiPhi)
            {
                chiphi += (decimal)cp.GiaTien;
            }
            return chiphi;
        }
        public decimal TinhDoanhThu()
        {
            //if(listCTDoan.Count == 0) { return 0; }
            int sl = 0;
            foreach(CTDoan ct in listCTDoan)
            {
                if (ct.ChucVuTrongDoan.Trim() == "Khách") sl++;
            }
            decimal chiphi = 0;
            foreach(ChiPhi cp in listChiPhi)
            {
                chiphi += (decimal)cp.GiaTien;
            }
            decimal tong = ((decimal)this.Gia * sl) - chiphi;
            this.doanhthu = tong;
            return tong;
        }

    }
}
